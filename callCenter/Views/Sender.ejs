<html>
  <head>
    <!--
        https://medium.com/@noufel.gouirhate/build-a-simple-chat-app-with-node-js-and-socket-io-ea716c093088xc
        https://hmh.engineering/experimenting-with-apache-kafka-and-nodejs-5c0604211196
        https://www.sitepoint.com/using-redis-node-js/
    -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.0.4/socket.io.js"></script>
    <!-- <script src="test.js"></script> -->
    <script>
      var stTime;
      function initSocket() {
        //socket is global
        socket = io.connect();
        alert("connected");
      }
      function sendMessage(total) {
        socket.emit("totalWaitingCalls", { totalWaiting: total });
      }
    </script>

    <script>
      function startConv() {
        var tr = document.getElementById("openConversations").insertRow();
        var cStart = tr.insertCell(0);
        var cCity = tr.insertCell(1);
        var cGender = tr.insertCell(2);
        var cAge = tr.insertCell(3);
        var cPrevCalls = tr.insertCell(4);
        var cProd = tr.insertCell(5);
        var cTopic = tr.insertCell(6);
        var cEnd = tr.insertCell(7);

        fetch("http://localhost:3000/sendData")
          .then((response) => response.json())
          .then((data) => {
            cStart.innerHTML = data.startTime;
            cCity.innerHTML = data.city;
            cGender.innerHTML = data.gender;
            cAge.innerHTML = data.age;
            cPrevCalls.innerHTML = data["prev calls"];
            cProd.innerHTML = data.product;
            cTopic.innerHTML = data.topic;
          });

        const date = Date.now();
        stTime = Date().slice(16, 21);
        const dateTimeFormat = new Intl.DateTimeFormat("en", {
          year: "numeric",
          month: "short",
          day: "2-digit",
          hour: "numeric",
          minute: "numeric",
        });
        cEnd.innerHTML =
          "<button onclick='reportEndCall(this.parentNode.parentNode)'>End Call</button>";
      }

      function reportEndCall(row) {
        var totalCalls = parseInt(document.getElementById("total").value) || 0;
        if (parseInt(totalCalls) > 0) {
          document.getElementById("total").value = --totalCalls + "";
        }

        var message = {};
        message.id = Math.random();
        message.time = row.cells[0].innerHTML;
        message.city = row.cells[1].innerHTML;
        message.gender = row.cells[2].innerHTML;
        message.age = row.cells[3].innerHTML;
        message.prevCalls = row.cells[4].innerHTML;
        message.product = row.cells[5].innerHTML;
        message.topic = row.cells[6].innerHTML;
        message.StartTime = stTime;
        message.EndTime = Date().slice(16, 21);
        message.timeInYear = document.getElementById("time").value;
        message.totalWaitingCalls = document.getElementById("total").value;
        message.totalTime =
          (parseInt(Date.now()) - parseInt(message.id)) / 1000; // seconds

        socket.emit("callDetails", message);
        deleteRow(row);
      }

      function deleteRow(row) {
        var i = row.rowIndex;
        document.getElementById("openConversations").deleteRow(i);
      }
    </script>
  </head>

  <body onload="initSocket()">
    Total Waiting calls:
    <input type="number" id="total" min="0" max="200" value="0" />
    <input type="button" value="Set" onclick="sendMessage(total.value)" />
    &nbsp;
    <select id="time">
      <option value="Holidays">Holidays</option>
      <option value="Summer Vacation">Summer Vacation</option>
      <option value="Regular days">Regular days</option>
    </select>
    <hr />
    <input type="button" onclick="startConv()" value="Answer Call" />
    <table
      id="openConversations"
      border="1"
      style="background-color: burlywood"
    >
      <tr>
        <th>Start Time</th>
        <th>City</th>
        <th>Gender</th>
        <th>Age</th>
        <th>d</th>
        <th>Prev.Calls</th>
        <th>Product</th>
        <th>Topic</th>
        <th>End</th>
      </tr>
    </table>
  </body>
</html>
